#!/bin/bash -
# Print country's IP blockss in CIDR notation
# Version 1.0
# Written by Bernard Lim <bernard.lim@sands.com>

AUTHOR="Bernard Lim <lim.yiok.kia@gmail.com>"
VERSION="1.0"
PROG=$(basename $0)

ASN_ONLY=false
PARALLEL="xargs -n1 -P${MAX:=64} -I{}"  # if GNU parallel not available

# fanciful output
b="\033[1m"  # bold
u="\033[4m"  # underline
o="\033[0m"  # off

# usage
usage() {
cat <<EOF
Usage: $PROG [OPTION] [CC] (2-letter country code)
Print CC's IP blocks in CIDR notation to standard output

$(echo -e ${b}Options${o})
  -a            Print ASN's IP blocks and exit
  -h            Display this help and exit
  -p n          Run n processes in parallel (default n=64)
  -v            Show version information and exit

$PROG uses ISO 3166-1 alpha-2 codes to represent country.
They are 2-letter country codes used widely to represent
countries, dependent territories and special areas of
geographical interest.

$(echo -e ${b}Examples${o})
  $PROG SG          # Print Singapore's IP blocks (fast)
  $PROG US          # Print United States' IP blocks (long)
  $PROG -p 100 SG   # Same as above but run 100 processes in parallel
  $PROG -a AS668    # Print IP blocks originating from AS668

Report $PROG bugs to $AUTHOR
This software is distributed in the hope that it will be
useful but without any warranty. It is provided "as is".
EOF
}

# return IP prefixes from ASN
asn2ip() {
  local asn=$1
  local command=!g
  local server=whois.radb.net

  if [[ -z "$asn" || "$asn" == "-" ]]; then
    (cat | $PARALLEL whois -h $server "$command{}" 2>/dev/null | \
      grep -Ev '^[a-zA-Z]' | tr -d '\n' | sed -r 's/(\/[0-9]{1,2})/\1\n/g' | \
        sed '/^$/d' | tr -d ' ') | sort -t. -n -k1,1 -k2,2 -k3,3 -k4,4 | \
          uniq -c | awk '{ print $NF }'
  else
    (whois -h $server "$command$asn" 2>/dev/null) | \
      grep -Ev '^[a-zA-Z]' | tr -d '\n' | sed -r 's/(\/[0-9]{1,2})/\1\n/g' | \
        sed '/^$/d' | tr -d ' ' | sort -t. -n -k1,1 -k2,2 -k3,3 -k4,4 | \
          uniq -c | awk '{ print $NF }'
  fi
}

# return ASN from CC
cc2asn() {
  local cc=$(tr 'a-z' 'A-Z' <<<$1)
  local ua="Mozilla/5.0"
  local url="http://bgp.he.net/country/$cc"

  curl -s -A $ua $url | grep -Eo 'AS[0-9]+' | uniq -c | awk '{ print $NF }'
}

# validate ASN
validate_asn() {
  local asn=$1

  # sanity check
  if [ -z "$asn" ]; then
    echo "$PROG: argument is missing: [ASN]" >&2
    return 1
  fi

  # format check
  if grep -Ev '^[aA][sS][0-9]+$' <<<"$asn" > /dev/null; then
    echo "$PROG: invalid ASN format" >&2
    return 1
  fi
}

# validate CC
validate_cc() {
  local cc=$1

  # sanity check
  if [ -z "$cc" ]; then
    echo "$PROG: argument is missing: [CC]" >&2
    return 1
  fi

  # format check
  if grep -Ev '^[a-zA-Z]{2}$' <<<"$cc" >/dev/null; then
    echo "$PROG: invalid country code" >&2
    return 1
  fi
}

# Check for empty arguments
if [ $# -eq 0 ]; then
  usage
  exit 1
fi

# Parse short options
OPTIND=1
while getopts ":ahp:v" opt; do
  case $opt in
  a) ASN_ONLY=true;;
  h)
    usage
    exit 0
    ;;
  p)
    if grep -Ev '^[0-9]+$' &>/dev/null <<<"$OPTARG"; then
      echo "Option -$opt expects an integer as argument" >&2
      exit 1
    fi
    MAX=$((10#$OPTARG))
    ;;
  v)
    echo "$PROG $VERSION"
    echo "Written by $AUTHOR"
    exit 0
    ;;
  :)
    echo "Option -$OPTARG requires an argument" >&2
    exit 1
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done;
shift $((OPTIND-1))

# main
input=$1

if $ASN_ONLY; then
  validate_asn $input; if [ $? -eq 1 ]; then exit 1; fi
  asn2ip $input
else
  validate_cc $input; if [ $? -eq 1 ]; then exit 1; fi

  # GNU parallel installed?
  if which parallel &>/dev/null; then
    PARALLEL="parallel -j+${MAX:=64}"
  fi

  cc2asn $input | asn2ip
fi
